mod!doc = @'
Utilities, simple functions
@'

@doc'
Prints msg to stderr and exits with exit_code
- msg : Message to print
- [exit_code], Int : Program output
@'
fn fatal(msg, exit_code: -1) {
    # TODO : Print to stderr
    print msg

    exit(exit_code)
}

# --- Default functions ---
# Used to avoid boilerplate code
@doc'
Returns whether it is empty
- return, Bool
@'
fn default_collection_empty() {
    return len(me) == 0
}

@doc'
Returns whether it is not empty
- return, Bool
@'
fn default_collection_not_empty() {
    return len(me) != 0
}

# TODO : Use iterator algorithms
@doc'
Returns the index of the first occurence of item.
Returns -1 if not found.
- item : Item to find
- return : The index of the item (or -1 if not found)
@'
fn default_collection_index(item) {
    i = 0
    for e in me {
        if e == item {
            return i
        }

        i += 1
    }

    return -1
}

@doc'
Sets up the collection type with default collection methods
and attribute variables.
@'
fn set_default_collection(type) {
    type.empty = copy(default_collection_empty)
    type.empty!name = typename(type) + '.empty'

    type.index = copy(default_collection_index)
    type.index!name = typename(type) + '.index'

    type.not_empty = copy(default_collection_not_empty)
    type.not_empty!name = typename(type) + '.not_empty'
}
